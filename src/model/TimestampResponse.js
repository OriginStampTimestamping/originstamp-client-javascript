
/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TimestampData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TimestampData'));
  } else {
    // Browser globals (root is window)
    if (!root.OriginStamp) {
      root.OriginStamp = {};
    }
    root.OriginStamp.TimestampResponse = factory(root.OriginStamp.ApiClient, root.OriginStamp.TimestampData);
  }
}(this, function(ApiClient, TimestampData) {
  'use strict';

  /**
   * The TimestampResponse model module.
   * @module model/TimestampResponse
   * @version 3.0
   */

  /**
   * Constructs a new <code>TimestampResponse</code>.
   * Response object for the timestamp response. Create, Status and Webhookshare the same object. This saves customers additional implementation work, as the requests or data only have to be understood once.The difference is that the webhook is only triggered as soon as a tamper-proof timestamp exists.
   * @alias module:model/TimestampResponse
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>TimestampResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TimestampResponse} obj Optional instance to populate.
   * @return {module:model/TimestampResponse} The populated <code>TimestampResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Boolean');
      if (data.hasOwnProperty('date_created'))
        obj.date_created = ApiClient.convertToType(data['date_created'], 'Number');
      if (data.hasOwnProperty('hash_string'))
        obj.hash_string = ApiClient.convertToType(data['hash_string'], 'String');
      if (data.hasOwnProperty('timestamps'))
        obj.timestamps = ApiClient.convertToType(data['timestamps'], [TimestampData]);
    }
    return obj;
  }

  /**
   * The comment which was added in the submission of the hash.
   * @member {String} comment
   */
  exports.prototype.comment = undefined;

  /**
   * Field is set to true if it is a novel hash.If the flag is false, the hash was already submitted before.
   * @member {Boolean} created
   */
  exports.prototype.created = undefined;

  /**
   * The time when your hash was submitted to OriginStamp. The date is returned in the following format: [ms] since 1.1.1970 (unix epoch), timezone: UTC. This is not considered as a true timestamp.
   * @member {Number} date_created
   */
  exports.prototype.date_created = undefined;

  /**
   * The submitted hash in hex representation.
   * @member {String} hash_string
   */
  exports.prototype.hash_string = undefined;

  /**
   * Contains all the timestamp data of your hash until now.
   * @member {Array.<module:model/TimestampData>} timestamps
   */
  exports.prototype.timestamps = undefined;


  return exports;

}));
