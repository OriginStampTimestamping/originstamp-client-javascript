
/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OriginStamp) {
      root.OriginStamp = {};
    }
    root.OriginStamp.TimestampData = factory(root.OriginStamp.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The TimestampData model module.
   * @module model/TimestampData
   * @version 3.0
   */

  /**
   * Constructs a new <code>TimestampData</code>.
   * DTO for the timestamp data.
   * @alias module:model/TimestampData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>TimestampData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TimestampData} obj Optional instance to populate.
   * @return {module:model/TimestampData} The populated <code>TimestampData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('currency_id'))
        obj.currencyId = ApiClient.convertToType(data['currency_id'], 'Number');
      if (data.hasOwnProperty('private_key'))
        obj.privateKey = ApiClient.convertToType(data['private_key'], 'String');
      if (data.hasOwnProperty('seed_id'))
        obj.seedId = ApiClient.convertToType(data['seed_id'], 'String');
      if (data.hasOwnProperty('submit_status'))
        obj.submitStatus = ApiClient.convertToType(data['submit_status'], 'Number');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'Number');
      if (data.hasOwnProperty('transaction'))
        obj.transaction = ApiClient.convertToType(data['transaction'], 'String');
    }
    return obj;
  }

  /**
   * 0: Bitcoin
   * @member {Number} currencyId
   */
  exports.prototype.currencyId = undefined;

  /**
   * The private key represents the top hash in the Merkle Tree (see https://en.wikipedia.org/wiki/Merkle_tree ) or the hash of all hashes in the transaction.
   * @member {String} privateKey
   */
  exports.prototype.privateKey = undefined;

  /**
   * ID of associated seed which can be used to request separate seed information.
   * @member {String} seedId
   */
  exports.prototype.seedId = undefined;

  /**
   * The submit status of the hash:   0: the hash was not broadcasted yet  1: the hash was included into a transaction and broadcasted to the network, but not included into a block  2: the transaction was included into the latest block  3: the timestamp for your hash was successfully created.
   * @member {Number} submitStatus
   */
  exports.prototype.submitStatus = undefined;

  /**
   * The date is returned in the following format: [ms] since 1.1.1970 (unix epoch), timezone: UTC. This is a true timestamp.
   * @member {Number} timestamp
   */
  exports.prototype.timestamp = undefined;

  /**
   * If available: the transaction hash of the timestamp.
   * @member {String} transaction
   */
  exports.prototype.transaction = undefined;


  return exports;

}));
