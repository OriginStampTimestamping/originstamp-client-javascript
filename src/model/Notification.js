
/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OriginStamp) {
      root.OriginStamp = {};
    }
    root.OriginStamp.Notification = factory(root.OriginStamp.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Notification model module.
   * @module model/Notification
   * @version 3.0
   */

  /**
   * Constructs a new <code>Notification</code>.
   * DTO object for notifications.
   * @alias module:model/Notification
   * @class
   * @param currency {Number} 0: Bitcoin
   * @param notificationType {Number} 0: notify via email  1: notify a webhook
   * @param target {String} Depending on the notification type, specify the target for the notification (e.g. mail address or webhook URL). The webhook URL will receive a POST request after timestamp was successfully created.
   */
  var exports = function(currency, notificationType, target) {
    this.currency = currency;
    this.notificationType = notificationType;
    this.target = target;
  };

  /**
   * Constructs a <code>Notification</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Notification} obj Optional instance to populate.
   * @return {module:model/Notification} The populated <code>Notification</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'Number');
      if (data.hasOwnProperty('notification_type'))
        obj.notificationType = ApiClient.convertToType(data['notification_type'], 'Number');
      if (data.hasOwnProperty('target'))
        obj.target = ApiClient.convertToType(data['target'], 'String');
    }
    return obj;
  }

  /**
   * 0: Bitcoin
   * @member {Number} currency
   */
  exports.prototype.currency = undefined;

  /**
   * 0: notify via email  1: notify a webhook
   * @member {Number} notificationType
   */
  exports.prototype.notificationType = undefined;

  /**
   * Depending on the notification type, specify the target for the notification (e.g. mail address or webhook URL). The webhook URL will receive a POST request after timestamp was successfully created.
   * @member {String} target
   */
  exports.prototype.target = undefined;


  return exports;

}));
